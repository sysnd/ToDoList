@using ToDoList.Shared.Models.Requests
@using ToDoList.Client.Services.Auth

@inject IModalService ModalService
@inject IToastService ToastService
@inject NavigationManager NavigationManager
@inject IAuthService AuthService

<div class="col-lg-4 col-md-6 col-sm-12 col-xs-12 mx-auto">
    <div class="card">
        <div class="card-body">
            <h4 class="card-title">Sign in</h4>
            <EditForm Model="@User" OnValidSubmit="@OnValidSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="form-group">
                    <label for="usernameInput">Username</label>
                    <InputText type="text" class="form-control" id="usernameInput" @bind-Value="@User.Username" />
                    <ValidationMessage For="@(() => User.Username)" />
                </div>
                <div class="form-group">
                    <label for="passwordInput">Password</label>
                    <InputText type="password" class="form-control" id="passwordInput" @bind-Value="@User.Password" />
                    <ValidationMessage For="@(() => User.Password)" />
                </div>
                <button type="submit" class="btn btn-primary">Sign In</button>
            </EditForm>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public UserLoginRequest User { get; set; }

    [CascadingParameter]
    BlazoredModalInstance BlazoredModal { get; set; }

    private async Task OnValidSubmit()
    {
        var result = await AuthService.Login(User);
        if (result.IsSuccessful)
        {
            
            NavigationManager.NavigateTo("/assignments");
        }
        else
        {
            ToastService.ShowError(result.Message);
        }
    }
}
