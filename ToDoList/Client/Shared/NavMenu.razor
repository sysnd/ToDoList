<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">To-Do List</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="fas fa-home fa-2x nav-icon" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        <li class="nav-item px-3 @displayAssignmentsClass">
            <NavLink class="nav-link" href="assignments">
                <span class="fas fa-tasks fa-2x nav-icon" aria-hidden="true"></span> Assignments
            </NavLink>
        </li>
        <li class="nav-item px-3 @displayUsersClass">
            <NavLink class="nav-link" href="users">
                <span class="fas fa-users fa-2x nav-icon" aria-hidden="true"></span> Users
            </NavLink>
        </li>
    </ul>
</div>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; }

    private string displayAssignmentsClass;
    private string displayUsersClass;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateTask;
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            if (!user.IsInRole("Admin"))
            {
                displayUsersClass = "display-none";
            }
        }
        else
        {
            displayAssignmentsClass = "display-none";
            displayUsersClass = "display-none";
        }
    }
}
